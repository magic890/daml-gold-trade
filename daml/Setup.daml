module Setup where

import Daml.Script
import DA.Date as D
import Main


setup : Script ()
setup = script do

  -- User creation
  alice <- allocatePartyWithHint "Alice" (PartyIdHint "Alice")
  bob <- allocatePartyWithHint "Bob" (PartyIdHint "Bob")
  charlie <- allocatePartyWithHint "Charlie" (PartyIdHint "Charlie")
  aliceId <- validateUserId "alice"
  bobId <- validateUserId "bob"
  charlieId <- validateUserId "charlie"
  createUser (User aliceId (Some alice)) [CanActAs alice]
  createUser (User bobId (Some bob)) [CanActAs bob]
  createUser (User charlieId (Some charlie)) [CanActAs charlie]

  -- Asset creation
  aliceGold1 <- submit alice do
    createCmd Asset with
      issuer = alice
      pledgedTo = []
      pledgedInDate = []
      pledgedBearingInterest = []
      name = "Gold Bar 1oz"
      value = 1800.00
      currency = "CHF"

  aliceGold2 <- submit alice do
    createCmd Asset with
      issuer = alice
      pledgedTo = []
      pledgedInDate = []
      pledgedBearingInterest = []
      name = "Gold Bar 2oz"
      value = 3600.00
      currency = "CHF"

  bobGold1 <- submit bob do
    createCmd Asset with
      issuer = bob
      pledgedTo = []
      pledgedInDate = []
      pledgedBearingInterest = []
      name = "Gold Bar 0.5kg"
      value = 27000.00
      currency = "CHF"

  -- Workflow start
  
  -- Set ledger time
  let date1: Date = D.date 2023 Jan 4

  -- Alice returns asset to Alice
  --   --> Trigger error: Alice can't return an asset to herself, she already owns it.
  submitMustFail alice do
    exerciseCmd aliceGold1 ReturnAsset with
      date = date1

  -- Alice pledges to Bob
  aliceGold1 <- submit alice do 
    exerciseCmd aliceGold1 PledgeAssetTo with 
      proposalReceiver = bob
      proposalDate = date1
      proposalBearingInterest = 0.02

  -- Bob accepts pledge
  aliceGold1 <- submit bob do 
    exerciseCmd aliceGold1 Accept with 
      date = date1

  -- Time travel in future after N days
  let date2: Date = addDays date1 365

  -- Bob tries to pledge back to Alice 
  --   -> Trigger error: Bob can't pledge the asset to the issuer. He can return it.
  submitMustFail bob do
    exerciseCmd aliceGold1 PledgeAssetTo with
      proposalReceiver = alice
      proposalDate = date2
      proposalBearingInterest = 0.15

  -- Bob pledges to Charlie
  aliceGold1 <- submit bob do
    exerciseCmd aliceGold1 PledgeAssetTo with
      proposalReceiver = charlie
      proposalDate = date2
      proposalBearingInterest = 0.05

  -- Charlie accepts pledge
  aliceGold1 <- submit charlie do 
    exerciseCmd aliceGold1 Accept with 
      date = date2

  -- Alice tries to archive her gold
  --   --> Trigger error: Alice can't archive because her asset is pledged and she is not the owner.
  submitMustFail alice do
     archiveCmd aliceGold1

  -- Bob tries to archive her gold
  --   --> Trigger error: Bob can't archive because he is not the issuer of the asset and it is pledged.
  submitMustFail bob do
     archiveCmd aliceGold1

  -- Bob tries to return the asset to Alice while pledged to Charlie 
  --   -> Trigger error: Charlie should return before to Bob
  submitMustFail bob do
    exerciseCmd aliceGold1 ReturnAsset with
      date = date2

  -- Time travel in future after N days
  let date3: Date = addDays date2 365

  -- Charlie returns asset to Bob
  aliceGold1 <- submit charlie do
    exerciseCmd aliceGold1 ReturnAsset with
      date = date3

  -- Bob returns asset to Alice
  aliceGold1 <- submit bob do
    exerciseCmd aliceGold1 ReturnAsset with
      date = date3

  -- Bob pledges to Charlie
  bobGold1 <- submit bob do
    exerciseCmd bobGold1 PledgeAssetTo with
      proposalReceiver = charlie
      proposalDate = date3
      proposalBearingInterest = 0.04

  -- Charlie accepts pledge
  bobGold1 <- submit charlie do
    exerciseCmd bobGold1 Accept with
      date = date3

  -- Time travel in future after N days
  let date4: Date = addDays date3 7

  -- Charlie pledges to Alice
  bobGold1 <- submit charlie do
    exerciseCmd bobGold1 PledgeAssetTo with
      proposalReceiver = alice
      proposalDate = date4
      proposalBearingInterest = 0.07

  
  pure()
